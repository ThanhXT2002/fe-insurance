.icon-box {
  position: relative;
  overflow: hidden;
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);

  &::before {
    content: "";
    position: absolute;
    top: 50%;
    left: 50%;
    width: 0;
    height: 0;
    border-radius: 50%;
    background: var(--hover-bg-color, #fbbf24);
    transform: translate(-50%, -50%);
    /* separate transitions for width/height and opacity for smoother effect */
    transition: all 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94);
    // transition:
    //   width 0.42s cubic-bezier(0.25, 0.46, 0.45, 0.94),
    //   height 0.42s cubic-bezier(0.25, 0.46, 0.45, 0.94),
    //   opacity 0.28s ease;
    z-index: 0;
    opacity: 0;
    /* rendering hints to reduce jank */
    will-change: width, height, opacity;
    backface-visibility: hidden;
    -webkit-backface-visibility: hidden;
    pointer-events: none;
  }

      .group:hover &::before {
    width: 120%;
    height: 120%;
    opacity: 1;
  }
 
  .group:not(:hover) &::before {
    width: 0;
    height: 0;
    opacity: 0;
    transition: all 0.4s cubic-bezier(0.55, 0.06, 0.68, 0.19);
  }

  /* Use :host-context so ancestor .group hover (e.g. product-card) affects this component's pseudo-element
     This keeps your original width/height animation but allows hover anywhere on the product card to trigger it. */
  :host-context(.group:hover) &::before {
    width: 120%;
    height: 120%;
    opacity: 1;
  }

  :host-context(.group:not(:hover)) &::before {
    width: 0;
    height: 0;
    opacity: 0;
    transition: all 0.4s cubic-bezier(0.55, 0.06, 0.68, 0.19);

    // transition:
    //   width 0.38s cubic-bezier(0.55, 0.06, 0.68, 0.19),
    //   height 0.38s cubic-bezier(0.55, 0.06, 0.68, 0.19),
    //   opacity 0.28s ease;
  }



  i {
    position: relative;
    z-index: 1;
    transition: all 0.3s ease;
  }
}

// Animation keyframes cho fadeInUp effect
@keyframes fadeInUp {
  0% {
    opacity: 0;
    transform: translateY(30px);
  }
  100% {
    opacity: 1;
    transform: translateY(0);
  }
}

// ThÃªm class cho animation
.fade-in-up {
  animation: fadeInUp 0.6s ease-out forwards;
}
